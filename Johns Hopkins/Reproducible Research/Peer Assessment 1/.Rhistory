install.packages("KernSmooth")
KernSmooth
library(KernSmooth)
x <- 1:10
if(x>5){}
if(x>5){x<-0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f
z <- 10
f(3)
x <-5
y <- if(x < 3) {
NA
} else {
10
}
y
log(10)
log(1)
log(2)
log(0)
summary(str())
summary(str
)
set.seed(1)
rpois(5,2)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
library(data.table)
dt <- data.table(read.csv(f))
varNames <- names(dt)
varNamesSplit <- strsplit(varNames, "wgtp")
varNamesSplit[[123]]
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
getwd()
setwd("/GitHub/Coursera/Johns Hopkins/Reproducible Research/")
setwd("GitHub/Coursera/Johns Hopkins/Reproducible Research/")
activty_data <- read.csv("activity.csv",header = TRUE)
View(activty_data)
View(activty_data)
View(activty_data)
View(activty_data)
steps_per_day <- aggregate(d[,1], list(activity_data$date), mean)
steps_per_day <- aggregate(activity_data[,1], list(activity_data$date), mean)
View(activty_data)
View(activty_data)
remove activty_data
remove(activty_data)
activity_data <- read.csv("activity.csv",header = TRUE)
steps_per_day <- aggregate(activity_data[,1], list(activity_data$date), mean)
View(steps_per_day)
View(steps_per_day)
steps_per_day <- aggregate(activity_data[,1], list(activity_data$date), mean, na.rm=TRUE)
View(steps_per_day)
View(steps_per_day)
# Loading and Preprocessing the data
remove(steps_per_day)
# Loading and Preprocessing the data
setwd("GitHub/Coursera/Johns Hopkins/Reproducible Research/")
activity_data <- read.csv("activity.csv",header = TRUE)
# What is mean total number of steps taken per day?
steps_per_day <- aggregate(activity_data[,1], list(activity_data$date), mean, na.rm=TRUE)
View(steps_per_day)
View(steps_per_day)
View(activity_data)
View(activity_data)
steps_per_day <- aggregate(activity_data[,1], list(activity_data$date), mean, na.action = na.omit)
View(steps_per_day)
View(steps_per_day)
remove(steps_per_day)
# Loading and Preprocessing the data
steps_per_day <- aggregate(activity_data[,1], list(activity_data$date), mean, na.action = na.omit)
View(steps_per_day)
View(steps_per_day)
View(activity_data)
View(activity_data)
activity_data_completecases <- complete.cases(activity_data[,1])
activity_data_completecases <- activity_data[complete.cases(activity_data[,1])]
remove(activity_data_completecases)
activity_data_completecases <- activity_data[complete.cases(activity_data[,1])]
activity_data_completecases <- activity_data[complete.cases(activity_data[,1]),]
View(activity_data_completecases)
View(activity_data_completecases)
steps_per_day <- aggregate(activity_data_completecases[,1], list(activity_data_completecases$date), mean)
View(steps_per_day)
View(steps_per_day)
View(steps_per_day)
remove(steps_per_day)
mean_stepsperday <- aggregate(activity_data_completecases[,1], list(activity_data_completecases$date), mean)
median_stepsperday <- aggregate(activity_data_completecases[,1], list(activity_data_completecases$date), median)
View(median_stepsperday)
View(mean_stepsperday)
sum_stepsperday <- aggregate(activity_data_completecases[,1], list(activity_data_completecases$date), sum)
View(sum_stepsperday)
View(sum_stepsperday)
hist(sum_stepsperday)
View(sum_stepsperday)
View(sum_stepsperday)
hist(sum_stepsperday)
View(sum_stepsperday)
View(sum_stepsperday)
View(sum_stepsperday)
sapply(activity_data, class)
sapply(sum_stepsperday, class)
library(ggplot2)
library(ggplot)
install.packages("ggplot2")
library(ggplot2)
ggplot(data=sum_stepsperday, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
View(sum_stepsperday)
View(sum_stepsperday)
ggplot(data=sum_stepsperday, aes(x=Group.1, y=x)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
ggplot(data=sum_stepsperday, aes(x=x, y=Group.1)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
View(sum_stepsperday)
View(sum_stepsperday)
ggplot(data=sum_stepsperday, aes(x=Group.1, y=x)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
View(sum_stepsperday)
View(sum_stepsperday)
ggplot(data=sum_stepsperday, aes(x=Group.1, y=x))
ggplot(data=sum_stepsperday, aes(x=Group.1, y=x))
View(activity_data_completecases)
View(activity_data_completecases)
View(activity_data_completecases)
View(activity_data_completecases)
ggplot(data=activity_data_completecases, aes(x=date, y=steps)) +
xlab("5-minute interval") +
ylab("average number of steps taken")
ggplot(data=activity_data_completecases, aes(x=date, y=steps))
hist(activity_data_completecases)
View(activity_data_completecases)
View(activity_data_completecases)
hist(activity_data_completecases[,c("date","steps")])
hist(activity_data_completecases[,c("steps","date")])
hist(activity_data_completecases[,c("steps")])
ggplot(data=activity_data_completecases, aes(x=date, y=steps))
View(median_stepsperday)
View(median_stepsperday)
hist(activity_data_completecases[,c("steps")])
View(activity_data)
View(activity_data)
View(sum_stepsperday)
View(sum_stepsperday)
hist(activity_data_completecases$steps)
steps_by_day <- aggregate(steps ~ date, activity_data_completecases, sum)
View(steps_by_day)
View(steps_by_day)
hist(activity_data_completecases$steps,main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
View(steps_by_day)
View(steps_by_day)
hist(sum_stepsperday$steps,main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
sapply(sum_stepsperday, class)
hist(as.numeric(sum_stepsperday$steps),main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
hist(as.numeric(sum_stepsperday$steps),main = paste(""), xlab="Number of Steps")
sum_stepsperday$calc_steps <- as.numeric(sum_stepsperday$x)
View(sum_stepsperday)
View(sum_stepsperday)
sapply(sum_stepsperday, class)
hist(sum_stepsperday$calc_steps,main = paste(""), xlab="Number of Steps")
hist(sum_stepsperday$calc_steps,main = paste("Steps per Day (TOTAL)"), xlab="Number of Steps")
library(ggplot)
# Loading and Preprocessing the data
setwd("GitHub/Coursera/Johns Hopkins/Reproducible Research/")
activity_data <- read.csv("activity.csv",header = TRUE)
activity_data_completecases <- activity_data[complete.cases(activity_data[,1]),]
activity_data_completecases$calc_steps <- as.numeric(activity_data_completecases$steps)
View(activity_data_completecases)
View(activity_data_completecases)
sum_stepsperday <- aggregate(activity_data_completecases$calc_steps, list(activity_data_completecases$date), sum)
mean_stepsperday <- aggregate(activity_data_completecases$calc_steps, list(activity_data_completecases$date), mean)
median_stepsperday <- aggregate(activity_data_completecases$calc_steps, list(activity_data_completecases$date), median)
View(mean_stepsperday)
View(mean_stepsperday)
View(sum_stepsperday)
View(sum_stepsperday)
hist(sum_stepsperday$x,main = paste("Steps per Day (TOTAL)"), xlab="Number of Steps")
View(median_stepsperday)
View(median_stepsperday)
median(activity_data_completecases$calc_steps)
View(mean_stepsperday)
View(mean_stepsperday)
View(median_stepsperday)
View(median_stepsperday)
# What is the average daily activity pattern?
mean_stepsperinterval <- aggregate(activity_data_completecases$calc_steps, list(activity_data_completecases$interval), mean)
View(mean_stepsperinterval)
View(mean_stepsperinterval)
plot(mean_stepsperinterval$interval,mean_stepsperinterval$steps, type="l", xlab="Interval", ylab="Number of Steps",main="Average Number of Steps per Day by Interval")
View(mean_stepsperinterval)
View(mean_stepsperinterval)
View(mean_stepsperinterval)
View(mean_stepsperinterval)
plot(mean_stepsperinterval$Group.1,mean_stepsperinterval$x, type="l", xlab="Interval", ylab="Number of Steps",main="Average Number of Steps per Day by Interval")
View(mean_stepsperinterval)
View(mean_stepsperinterval)
max_interval <- mean_stepsperinterval[which.max(mean_stepsperinterval$x),1]
num_missing <- is.na(activity_data$steps)
table(missing)
table(num_missing)
num_missing <- nrow(activity_data) - nrow(activity_data_completecases)
View(mean_stepsperinterval)
View(mean_stepsperinterval)
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (mean_stepsperinterval[mean_stepsperinterval$x==interval, "steps"])
return(filled)
}
filled.data <- activity_data
filled.data$x <- mapply(fill.value, filled.data$x, filled.data$Group.1)
View(fill.value)
View(fill.value)
View(activity_data)
View(activity_data)
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (mean_stepsperinterval[mean_stepsperinterval$x==interval, "steps"])
return(filled)
}
filled.data <- activity_data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
View(filled.data)
View(filled.data)
sum_stepsperday_new <- aggregate(filled.data$steps, list(filled.data$steps$date), sum)
mean_stepsperday_new <- aggregate(filled.data$steps, list(filled.data$steps$date), mean)
median_stepsperday_new <- aggregate(filled.data$steps, list(filled.data$steps$date), median)
hist(sum_stepsperday_new$x,main = paste("Steps per Day (TOTAL, NA Replaced)"), xlab="Number of Steps")
sum_stepsperday_new <- aggregate(filled.data$steps, list(filled.data$date), sum)
mean_stepsperday_new <- aggregate(filled.data$steps, list(filled.data$date), mean)
median_stepsperday_new <- aggregate(filled.data$steps, list(filled.data$date), median)
View(filled.data)
View(filled.data)
# Replace each NA with the mean value of its 5-minute interval
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (mean_stepsperinterval[mean_stepsperinterval$x==interval, "x"])
return(filled)
}
filled.data <- activity_data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
View(filled.data)
View(filled.data)
View(mean_stepsperinterval)
View(mean_stepsperinterval)
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (mean_stepsperinterval[mean_stepsperinterval$Group.1==interval, "x"])
return(filled)
}
filled.data <- activity_data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
View(fill.value)
View(fill.value)
View(filled.data)
View(filled.data)
sum_stepsperday_new <- aggregate(filled.data$steps, list(filled.data$date), sum)
mean_stepsperday_new <- aggregate(filled.data$steps, list(filled.data$date), mean)
median_stepsperday_new <- aggregate(filled.data$steps, list(filled.data$date), median)
View(sum_stepsperday)
View(sum_stepsperday)
hist(sum_stepsperday_new$x,main = paste("Steps per Day (TOTAL, NA Replaced)"), xlab="Number of Steps")
View(median_stepsperday_new)
View(median_stepsperday_new)
sapply(sum_stepsperday, class)
View(filled.data)
View(filled.data)
filled.data$calc_date <- as.POSIXct(filled.data$date, format="%Y-%m-%d")
View(filled.data)
View(filled.data)
filled.data$weekday <-  tolower(weekdays(filled.data$date))
filled.data$weekday <-  tolower(weekdays(filled.data$calc_date))
View(filled.data)
View(filled.data)
filled.data <- cbind(filled.data,
daytype=ifelse(filled.data$weekday == "saturday" |
filled.data$weekday == "sunday", "weekend",
"weekday"))
View(filled.data)
View(filled.data)
xyplot(mean_stepsperday_new | daytype, filled.data,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
library(lattice)
xyplot(mean_stepsperday_new | daytype, filled.data,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
xyplot(filled.data | daytype, filled.data,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
View(filled.data)
View(filled.data)
averages <- aggregate(steps ~ interval + day, data=filled.data, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
averages <- aggregate(steps ~ interval + day, data=filled.data, mean)
averages <- aggregate(steps ~ interval + daytype, data=filled.data, mean)
View(averages)
View(averages)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(daytype ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
View(activity_data)
View(activity_data)
library(ggplot)
install.packages("proto")
library(ggplot)
install.packages('ggplot2', dep = TRUE)
install.packages('ggplot2', dep = TRUE)
install.packages("ggplot2", dep = TRUE)
